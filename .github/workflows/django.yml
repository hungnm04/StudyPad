name: Django CI

on:
  push:
    branches: [ "main", "development-pipeline", "feature/*" ]  # ADD feature branches
  pull_request:
    branches: [ "main", "development-pipeline" ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9, 3.11]

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # SonarCloud needs full git history
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      working-directory: ./noteApp
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage bandit
    
    - name: Run Django system checks
      working-directory: ./noteApp
      run: |
        python manage.py check
    
    - name: Run database migrations
      working-directory: ./noteApp
      run: |
        python manage.py migrate
    
    - name: Run comprehensive test suite with coverage
      working-directory: ./noteApp
      run: |
        coverage run --source='.' --omit='*/migrations/*,*/venv/*,manage.py,*/settings.py,*/wsgi.py,*/asgi.py,*/admin.py,*/apps.py,*/__init__.py' manage.py test posts api --verbosity=2
    
    - name: Generate coverage report
      working-directory: ./noteApp
      run: |
        coverage report --show-missing --fail-under=70
        coverage xml -o coverage.xml
        coverage html -d htmlcov/
    
    - name: SonarCloud Scan
      if: matrix.python-version == '3.11'  # Only run once
      uses: SonarSource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
          -Dsonar.projectKey=hungnm04_StudyPad
          -Dsonar.organization=hungnm04
          -Dsonar.python.coverage.reportPaths=noteApp/coverage.xml
          -Dsonar.sources=noteApp/
          -Dsonar.exclusions=**/migrations/**,**/venv/**,**/htmlcov/**,**/__pycache__/**
          -Dsonar.tests=noteApp/posts/tests.py,noteApp/api/tests.py
          -Dsonar.test.exclusions=**/migrations/**,**/venv/**
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./noteApp/coverage.xml
        directory: ./noteApp/
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
    
    - name: Upload coverage artifact
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: coverage-report-${{ matrix.python-version }}
        path: |
          noteApp/coverage.xml
          noteApp/htmlcov/
    
    - name: Check for missing migrations
      working-directory: ./noteApp
      run: |
        python manage.py makemigrations --check --dry-run
    
    - name: Lightweight security check
      working-directory: ./noteApp
      run: |
        bandit -r posts/ api/ -ll --format=txt || echo "Security scan completed with warnings"